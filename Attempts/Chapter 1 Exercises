# Chapter 1 exercise team attempt 

#Ex 1.1 two other discrete distributions 
rnbinom()
rgeom()
# full list can be found through
https://www.stat.umn.edu/geyer/old/5101/rlook.html

# Ex 1.2
dbinom(2, size=10, prob=.3)

dbinom(2,10,0.3)+dbinom(1,10,0.3)+dbinom(0,10,0.3)
probabilities = dbinom(0:2, prob = 0.3, size = 10)
probabilities
 
sum(probabilities)
 
pbinom(2, prob=0.3, size=10)
 

# Ex 1.3/1.4
Poi_function <- function(m=9,n=100,lambda=0.5){
    maxes <- max(rpois(n, lambda))
    prb <- mean( maxes >= m )
    prb
}
Poi_function()

# Ex 1.5
maxes = replicate(1000000, {
    max(rpois(100, 0.5))
})
table(maxes)
prb <- mean( maxes >= 9 )


# Ex 1.6

dlogis()
dnorm()
dgamma()
dcauchy()
dchisq()

# Ex 1.7 
mean(rpois(100,3))
var(rpois(100,3))

# Ex 1.8
## Set up
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
BiocManager::install(c("Biostrings", "BSgenome.Celegans.UCSC.ce2"))

## Import data
library("BSgenome.Celegans.UCSC.ce2")
Celegans$chrM
class(Celegans$chrM)
length(Celegans$chrM)

## a)
library("Biostrings")
Celegansfrequency <- letterFrequency(Celegans$chrM, letters=c("A", "C", "G", "T"))

## b)
Celegansfrequency / sum(Celegansfrequency)
13:49:38	 From  Sasdekumar Loganathan : plot(dunif(x, min = 0, max = 4, log = FALSE))
